module Schema2type

  DEFAULT_SCHEMA_PATH = "./db/schema.rb"
  DEFAULT_NAME_SPACE = "schema"

  def self.execute(input_file:, out_file:, name_space:, snake_case:)
    @@converted_types = []
    @@snake_case = snake_case

    eval(File.read(input_file || DEFAULT_SCHEMA_PATH))

    convert_type_text = @@converted_types.map { |t| "  #{t}" }.join("\n").strip

    File.open(out_file, "w") do |f|
      f.puts <<~EOS
        /* eslint no-unused-vars: 0 */

        /**
         * auto-generated file
         * schema version: #{$schema_version}
         * This file was automatically generated by schema2type
         */
        declare namespace #{name_space || DEFAULT_NAME_SPACE} {
          #{convert_type_text}
        }
      EOS
    end
  end

  def self.convert_schema(table_name, *)
    converter = SchemaConverter.new(table_name: table_name, snake_case: @@snake_case)

    yield converter

    @@converted_types.concat converter.result
  end

  def self.method_missing(*arg)
    # To exclude unnecessary methods
  end

  module ActiveRecord
    module Schema
      def self.define(version)
        $schema_version = version[:version]
        yield
      end
    end
  end

  class << self
    alias :create_table :convert_schema
  end
end
